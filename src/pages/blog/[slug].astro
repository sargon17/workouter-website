---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Breadcrumbs from '../../sections/breadcrumbs.astro';
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props as { post: CollectionEntry<"blog"> };
// Get the compiled markdown as a component
const { Content } = await post.render();


const date = new Date(post.data.pubDate);
const formattedDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });

const timeToRead = post.body ? Math.ceil(post.body.split(' ').length / 150) : 0;

---
<Layout>
  
  <div class="max-w-screen-lg mt-30 mx-auto p-4">
    <Breadcrumbs path={[{ label: 'Home', href: '/' }, { label: 'Blog', href: '/blog' }, { label: post.data.title, href: `/blog/${post.slug}` }]} />
  </div>

  <article class="max-w-screen-lg my-10 mx-auto p-4">
    <h1 class="text-5xl font-bold">{post.data.title}</h1>
    <p class="text-lg text-gray-500 mb-10">{post.data.description}</p>
    <p class="text-sm text-gray-500 mb-10">Published on {formattedDate} â€¢ {timeToRead} min read</p>
    <div class="mt-4 article-content">
      <Content />
    </div>
  </article>
</Layout>
