---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';


// Load the content collection named "blog"
const posts = await getCollection('blog');

const sortedPosts = posts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const quantityOfPosts = sortedPosts.length;

---

<Layout>
  <section class="max-w-screen-2xl mt-30 mx-auto p-4">
    <div class="flex justify-between items-center">
      <h1 class="text-4xl font-black lg:text-6xl mb-10">Blog Posts</h1>
      <p id="posts-count" class="text-sm text-text-secondary">{quantityOfPosts} posts</p>
    </div>

    <!-- Search input field -->
    <div class="mb-4">
      <input
        id="blog-search"
        type="text"
        placeholder="Search blog posts..."
        class="p-4 rounded-lg bg-surface-secondary w-full text-text-primary font-bold focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent caret-green-500"
      />
    </div>

    <ul id="posts-list" class="list-none grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {sortedPosts.map((post: CollectionEntry<"blog">) => (
        <li data-title={post.data.title} data-description={post.data.description} data-content={post.body}>
          <a href={`/blog/${post.slug}`} class="block transition-all duration-300 hover:bg-surface-secondary rounded-2xl h-full group">
            <img src={post.data.image} alt={post.data.title} class="w-full h-auto rounded-lg my-4 group-hover:scale-95 group-hover:translate-y-1 transition-all duration-300" />
            <div class="p-4">
              <h2 class="text-2xl font-bold lg:text-4xl mb-2">{post.data.title}</h2>
              <p class="text-sm text-text-secondary">
                {new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                â€¢ {Math.ceil(post.body.split(' ').length / 150)} min read
              </p>
              <p class="text-sm text-text-secondary">{post.data.description}</p>
            </div>
          </a>
        </li>
      ))}
    </ul>

    <!-- Inline JavaScript for the search functionality -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('blog-search');
        const postsList = document.getElementById('posts-list');
        const postsItems = postsList.querySelectorAll('li');
        const postsCount = document.getElementById('posts-count');

        searchInput.addEventListener('input', function(e) {
          const query = e.target.value.toLowerCase();
          postsItems.forEach(item => {
            const postTitle = item.getAttribute('data-title')?.toLowerCase() || '';
            const postDesc = item.getAttribute('data-description')?.toLowerCase() || '';
            const postContent = item.getAttribute('data-content')?.toLowerCase() || '';
            if (postTitle.includes(query) || postDesc.includes(query) || postContent.includes(query)) {
              item.style.display = '';
            } else {
              item.style.display = 'none';
            }
          });
          // Update the posts count after filtering
          const visiblePostsCount = Array.from(postsItems).filter(item => item.style.display !== 'none').length;
          postsCount.textContent = `${visiblePostsCount} posts`;
        });
      });
    </script>
  </section>
</Layout>
